# -*- coding: utf-8 -*-
"""
This file is part of PyFrac.

Created by Carlo Peruzzo on Tue Dec 15 10:18:56 2021.
Copyright (c) "ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE, Switzerland, Geo-Energy Laboratory", 2016-2022.
All rights reserved. See the LICENSE.TXT file for more details.
"""

# external imports
import cmath as cm
import numpy as np
from numba import njit, float64, prange
from scipy.sparse import coo_matrix
from numba import config
from numba.typed import List

#internal imports
from mesh_obj.mesh import Neighbors
from utilities.utility import get_distance_components

"""
  
  BI-QUADRATIC DISPLACEMENT DISCONTINUITY METHOD 
  
  For notes on the kernels, see:
  Shou et al (Int. J. RockMech. Min. Sci. VoL 34, No. 2, pp. 317-322, 199)
  
  
   ---------------------
  |  13   |  23  |  33  |
  |       |      |      |
   --------------------- 
  |  12   |  22  |  32  |
  |       |      |      |
   --------------------- 
  |  11   |  21  |  31  |
  |       |      |      |
   --------------------- 
   
  - coordinates x and y are on the plane of the element. 
  - coordinate z is orthogonal to the plane of the element
  - each element has size (2*a) x (2*b)
  - the final matrix assembled using sig_zz_Dz_ij , i,j = 1,2,3 should be multiplied by 2G/(8 Pi(1-nu)) = 2G(1+nu)/(8 Pi(1-nu)(1+nu)) = E/(8 Pi(1-nu)(1+nu)) = E'/(8 Pi)
"""

# -------- KERNELS START --------
@njit((float64, float64, float64, float64), nogil=True, cache=True)
def get_common_var(a, b, x1, x2):
    x1ma = -a + x1
    x2mb = -b + x2
    x1pa = a + x1
    x2pb = b + x2
    aa = a * a
    bb = b * b
    Q_x2mb = x2mb * x2mb
    Q_x1ma = x1ma * x1ma
    Q_x1pa = x1pa * x1pa
    Q_x2pb = x2pb * x2pb
    Q_x1ma_p_Q_x2mb = Q_x1ma + Q_x2mb
    Q_x1pa_p_Q_x2mb = Q_x1pa + Q_x2mb
    return x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb

@njit(float64(float64, float64, float64, float64), nogil=True, cache=True)
def sig_zz_Dz_11(a, b, x1, x2):
    x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb = get_common_var(a, b, x1, x2)
    return ((-0.03125*x1**2*x2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*b*(x1ma)*(x2mb)) - (0.03125*x1*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(a*bb*(x1ma)*(x2mb)) + (0.015625*x1**2*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*bb*(x1ma)*(x2mb)) + (0.03125*x1**2*x2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*b*x1pa*(x2mb)) + (0.03125*x1*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(a*bb*x1pa*(x2mb)) - (0.015625*x1**2*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*bb*x1pa*(x2mb)) + (0.03125*x1**2*x2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*b*(x1ma)*x2pb) + (0.03125*x1*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(a*bb*(x1ma)*x2pb) - (0.015625*x1**2*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*bb*(x1ma)*x2pb) - (0.03125*x1**2*x2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*b*x1pa*x2pb) - (0.03125*x1*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(a*bb*x1pa*x2pb) + (0.015625*x1**2*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*bb*x1pa*x2pb) + (0.0625*x1*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x2*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x1*x2*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*x2*((-(x1ma)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + x1pa**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x1ma)**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((x1ma)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x1pa**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x1*((-Q_x1ma*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*(((x1ma)**2*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.005208333333333333*(((x1ma)**3*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa**3*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x2*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x1*x2*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*x2*((-(x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*(((x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x1*((-(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x2mb)**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + x2pb**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((x2mb)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x2pb**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.005208333333333333*(((x1ma)*(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*(x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*x2*(cm.sqrt(Q_x1ma_p_Q_x2mb)/((x1ma)*(x2mb)) - (cm.sqrt(Q_x1pa_p_Q_x2mb))/(x1pa*(x2mb)) - (cm.sqrt(Q_x1ma + Q_x2pb))/((x1ma)*x2pb) + cm.sqrt(Q_x1pa + Q_x2pb)/(x1pa*x2pb)))/(a*b) + (0.015625*x2**2*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x2*((cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.005208333333333333*((-cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((-((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2*((((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*(cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/(a - x1)) + cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/x1pa) + cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/(x1ma)) - cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/x1pa)))/(a*b) + (0.0625*x1*x2*(cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/(x1ma)) - cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/x1pa) + cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/(a - x1)) + cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/x1pa)))/(a*bb) - (0.015625*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) + (0.015625*x1*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.0625*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*b) + (0.0625*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*b) + (0.03125*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.03125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.015625*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) - (0.015625*x1*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.0625*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*b) - (0.0625*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*b) - (0.03125*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.03125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.015625*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) - (0.015625*x1*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.0625*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*b) - (0.0625*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*b) - (0.03125*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.03125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.015625*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.015625*x1*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.0625*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.03125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*x1**2*x2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*bb) + (0.015625*x1**2*(cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) - cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*b) + (0.03125*x1*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.015625*x1**2*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.005208333333333333*(x1ma)**3*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.03125*x1*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.015625*x1**2*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.005208333333333333*x1pa**3*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.03125*x1*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.015625*x1**2*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.005208333333333333*(x1ma)**3*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.03125*x1*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.015625*x1**2*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.005208333333333333*x1pa**3*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb)).real

@njit(float64(float64, float64, float64, float64), nogil=True, cache=True)
def sig_zz_Dz_12(a, b, x1, x2):
    x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb = get_common_var(a, b, x1, x2)
    return ((0.0625*x1*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(a*bb*(x1ma)*(x2mb)) - (0.03125*x1**2*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*bb*(x1ma)*(x2mb)) - (0.0625*x1*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(a*bb*x1pa*(x2mb)) + (0.03125*x1**2*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*bb*x1pa*(x2mb)) - (0.0625*x1*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(a*bb*(x1ma)*x2pb) + (0.03125*x1**2*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*bb*(x1ma)*x2pb) + (0.0625*x1*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(a*bb*x1pa*x2pb) - (0.03125*x1**2*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*bb*x1pa*x2pb) + (0.125*x1*x2*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x2*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.03125*x2*((x1ma)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x1pa**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*((-Q_x1ma*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.03125*x1*(((x1ma)**2*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((-(x1ma)**3*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa**3*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)**3*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x1*x2*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x2*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.03125*x2*(((x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*((-(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x2mb)**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + x2pb**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.03125*x1*((x2mb)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x2pb**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((-(x1ma)*(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*(x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.25*x1*((-cm.sqrt(Q_x1ma_p_Q_x2mb))/((x1ma)*(x2mb)) + cm.sqrt(Q_x1pa_p_Q_x2mb)/(x1pa*(x2mb)) + cm.sqrt(Q_x1ma + Q_x2pb)/((x1ma)*x2pb) - (cm.sqrt(Q_x1pa + Q_x2pb))/(x1pa*x2pb)))/a + (0.125*x1**2*(cm.sqrt(Q_x1ma_p_Q_x2mb)/((x1ma)*(x2mb)) - (cm.sqrt(Q_x1pa_p_Q_x2mb))/(x1pa*(x2mb)) - (cm.sqrt(Q_x1ma + Q_x2pb))/((x1ma)*x2pb) + cm.sqrt(Q_x1pa + Q_x2pb)/(x1pa*x2pb)))/aa + (0.125*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/aa + (0.03125*x2**2*((cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x2*((-((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.25*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/a - (0.25*x1*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/aa + (0.03125*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.03125*x1*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.0625*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) + (0.0625*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.25*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/a + (0.25*x1*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/aa - (0.03125*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.03125*x1*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.0625*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) - (0.0625*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.25*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/a + (0.25*x1*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/aa - (0.03125*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.03125*x1*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.0625*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) - (0.0625*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.25*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/a - (0.25*x1*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/aa + (0.03125*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.03125*x1*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.0625*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*x2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(a*bb) + (0.03125*x1**2*x2*(cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) - cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*bb) - (0.0625*x1*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) + (0.03125*x1**2*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.010416666666666666*(x1ma)**3*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.0625*x1*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) - (0.03125*x1**2*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.010416666666666666*x1pa**3*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.0625*x1*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) - (0.03125*x1**2*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.010416666666666666*(x1ma)**3*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.0625*x1*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.03125*x1**2*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*x1pa**3*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb)).real

@njit(float64(float64, float64, float64, float64), nogil=True, cache=True)
def sig_zz_Dz_13(a, b, x1, x2):
    x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb = get_common_var(a, b, x1, x2)
    return ((0.03125*x1**2*x2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*b*(x1ma)*(x2mb)) - (0.03125*x1*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(a*bb*(x1ma)*(x2mb)) + (0.015625*x1**2*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*bb*(x1ma)*(x2mb)) - (0.03125*x1**2*x2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*b*x1pa*(x2mb)) + (0.03125*x1*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(a*bb*x1pa*(x2mb)) - (0.015625*x1**2*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*bb*x1pa*(x2mb)) - (0.03125*x1**2*x2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*b*(x1ma)*x2pb) + (0.03125*x1*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(a*bb*(x1ma)*x2pb) - (0.015625*x1**2*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*bb*(x1ma)*x2pb) + (0.03125*x1**2*x2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*b*x1pa*x2pb) - (0.03125*x1*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(a*bb*x1pa*x2pb) + (0.015625*x1**2*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*bb*x1pa*x2pb) + (0.0625*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x2*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*x1*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x1*x2*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((-(x1ma)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + x1pa**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x1ma)**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2*((-(x1ma)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + x1pa**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x1ma)**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*x1*((-Q_x1ma*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*(((x1ma)**2*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.005208333333333333*(((x1ma)**3*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa**3*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x2*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*x1*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x1*x2*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((-(x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2*((-(x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*x1*((-(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x2mb)**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + x2pb**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((x2mb)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x2pb**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.005208333333333333*(((x1ma)*(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*(x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*x2*((-cm.sqrt(Q_x1ma_p_Q_x2mb))/((x1ma)*(x2mb)) + cm.sqrt(Q_x1pa_p_Q_x2mb)/(x1pa*(x2mb)) + cm.sqrt(Q_x1ma + Q_x2pb)/((x1ma)*x2pb) - (cm.sqrt(Q_x1pa + Q_x2pb))/(x1pa*x2pb)))/(a*b) + (0.03125*x2*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2**2*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.005208333333333333*((-cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2*((((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*(cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/(x1ma)) - cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/x1pa) + cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/(a - x1)) + cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/x1pa)))/(a*b) + (0.0625*x1*x2*(cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/(x1ma)) - cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/x1pa) + cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/(a - x1)) + cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/x1pa)))/(a*bb) - (0.015625*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) + (0.015625*x1*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.0625*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*b) - (0.0625*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*b) + (0.03125*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.03125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.015625*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) - (0.015625*x1*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.0625*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*b) + (0.0625*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*b) - (0.03125*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.03125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.015625*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) - (0.015625*x1*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.0625*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*b) + (0.0625*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*b) - (0.03125*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.03125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.015625*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.015625*x1*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) - (0.0625*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.03125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*x1**2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*b) + (0.015625*x1**2*x2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*bb) + (0.03125*x1*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.015625*x1**2*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.005208333333333333*(x1ma)**3*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.03125*x1*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.015625*x1**2*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.005208333333333333*x1pa**3*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.03125*x1*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.015625*x1**2*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.005208333333333333*(x1ma)**3*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.03125*x1*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.015625*x1**2*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.005208333333333333*x1pa**3*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb)).real

@njit(float64(float64, float64, float64, float64), nogil=True, cache=True)
def sig_zz_Dz_21(a, b, x1, x2):
    x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb = get_common_var(a, b, x1, x2)
    return ((0.0625*x1**2*x2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*b*(x1ma)*(x2mb)) - (0.03125*x1**2*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*bb*(x1ma)*(x2mb)) - (0.0625*x1**2*x2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*b*x1pa*(x2mb)) + (0.03125*x1**2*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*bb*x1pa*(x2mb)) - (0.0625*x1**2*x2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*b*(x1ma)*x2pb) + (0.03125*x1**2*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*bb*(x1ma)*x2pb) + (0.0625*x1**2*x2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*b*x1pa*x2pb) - (0.03125*x1**2*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*bb*x1pa*x2pb) + (0.125*x1*x2*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x1*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*((-(x1ma)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + x1pa**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x1ma)**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*x2*((x1ma)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x1pa**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x1*(((x1ma)**2*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((-(x1ma)**3*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa**3*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)**3*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x1*x2*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x1*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*((-(x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*x2*(((x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x1*((x2mb)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x2pb**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((-(x1ma)*(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*(x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.25*x2*((-cm.sqrt(Q_x1ma_p_Q_x2mb))/((x1ma)*(x2mb)) + cm.sqrt(Q_x1pa_p_Q_x2mb)/(x1pa*(x2mb)) + cm.sqrt(Q_x1ma + Q_x2pb)/((x1ma)*x2pb) - (cm.sqrt(Q_x1pa + Q_x2pb))/(x1pa*x2pb)))/b + (0.125*x2**2*(cm.sqrt(Q_x1ma_p_Q_x2mb)/((x1ma)*(x2mb)) - (cm.sqrt(Q_x1pa_p_Q_x2mb))/(x1pa*(x2mb)) - (cm.sqrt(Q_x1ma + Q_x2pb))/((x1ma)*x2pb) + cm.sqrt(Q_x1pa + Q_x2pb)/(x1pa*x2pb)))/bb + (0.0625*x2*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*x2**2*((cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x2*((-((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*((((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.25*(cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/(x1ma)) - cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/x1pa) + cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/(a - x1)) + cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/x1pa)))/b - (0.03125*x1*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.125*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*b) + (0.0625*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.03125*x1*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.125*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*b) - (0.0625*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.03125*x1*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.125*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*b) - (0.0625*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.03125*x1*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.125*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x1**2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*b) + (0.125*x2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/bb + (0.03125*x1**2*x2*(cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) - cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*bb) - (0.125*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/bb + (0.03125*x1**2*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.010416666666666666*(x1ma)**3*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.125*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/bb - (0.03125*x1**2*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.010416666666666666*x1pa**3*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.125*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/bb - (0.03125*x1**2*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.010416666666666666*(x1ma)**3*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.125*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/bb + (0.03125*x1**2*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*x1pa**3*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb)).real

@njit(float64(float64, float64, float64, float64), nogil=True, cache=True)
def sig_zz_Dz_22(a, b, x1, x2):
    x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb = get_common_var(a, b, x1, x2)
    return (cm.sqrt(Q_x1ma_p_Q_x2mb)/((x1ma)*(x2mb)) + (0.0625*x1**2*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*bb*(x1ma)*(x2mb)) + cm.sqrt(Q_x1pa_p_Q_x2mb)/(x1pa*(b - x2)) - (0.0625*x1**2*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*bb*x1pa*(x2mb)) - (cm.sqrt(Q_x1ma + Q_x2pb))/((x1ma)*x2pb) - (0.0625*x1**2*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*bb*(x1ma)*x2pb) + cm.sqrt(Q_x1pa + Q_x2pb)/(x1pa*x2pb) + (0.0625*x1**2*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*bb*x1pa*x2pb) + (0.25*x1*x2*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x2*((-(x1ma)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + x1pa**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x1ma)**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*((-Q_x1ma*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.020833333333333332*(((x1ma)**3*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa**3*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.25*x1*x2*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x2*((-(x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*((-(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x2mb)**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + x2pb**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.020833333333333332*(((x1ma)*(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*(x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.25*x1**2*((-cm.sqrt(Q_x1ma_p_Q_x2mb))/((x1ma)*(x2mb)) + cm.sqrt(Q_x1pa_p_Q_x2mb)/(x1pa*(x2mb)) + cm.sqrt(Q_x1ma + Q_x2pb)/((x1ma)*x2pb) - (cm.sqrt(Q_x1pa + Q_x2pb))/(x1pa*x2pb)))/aa + (0.25*x2**2*((-cm.sqrt(Q_x1ma_p_Q_x2mb))/((x1ma)*(x2mb)) + cm.sqrt(Q_x1pa_p_Q_x2mb)/(x1pa*(x2mb)) + cm.sqrt(Q_x1ma + Q_x2pb)/((x1ma)*x2pb) - (cm.sqrt(Q_x1pa + Q_x2pb))/(x1pa*x2pb)))/bb + (0.0625*x2**2*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.25*((cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/aa + (0.020833333333333332*((-cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x2*((((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.5*x1*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/aa + (0.0625*x1*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.5*x1*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/aa - (0.0625*x1*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.5*x1*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/aa - (0.0625*x1*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.5*x1*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/aa + (0.0625*x1*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1**2*x2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*bb) + (0.25*x2*(cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) - cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/bb + (0.25*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/bb - (0.0625*x1**2*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.020833333333333332*(x1ma)**3*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.25*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/bb + (0.0625*x1**2*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.020833333333333332*x1pa**3*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.25*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/bb + (0.0625*x1**2*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.020833333333333332*(x1ma)**3*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.25*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/bb - (0.0625*x1**2*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.020833333333333332*x1pa**3*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb)).real

@njit(float64(float64, float64, float64, float64), nogil=True, cache=True)
def sig_zz_Dz_23(a, b, x1, x2):
    x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb = get_common_var(a, b, x1, x2)
    return ((-0.0625*x1**2*x2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*b*(x1ma)*(x2mb)) - (0.03125*x1**2*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*bb*(x1ma)*(x2mb)) + (0.0625*x1**2*x2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*b*x1pa*(x2mb)) + (0.03125*x1**2*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*bb*x1pa*(x2mb)) + (0.0625*x1**2*x2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*b*(x1ma)*x2pb) + (0.03125*x1**2*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*bb*(x1ma)*x2pb) - (0.0625*x1**2*x2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*b*x1pa*x2pb) - (0.03125*x1**2*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*bb*x1pa*x2pb) + (0.125*x1*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.125*x1*x2*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*((x1ma)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x1pa**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*x2*((x1ma)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x1pa**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x1*(((x1ma)**2*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((-(x1ma)**3*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa**3*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)**3*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x1*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.125*x1*x2*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*(((x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*x2*(((x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x1*((x2mb)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x2pb**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((-(x1ma)*(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*(x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.25*x2*(cm.sqrt(Q_x1ma_p_Q_x2mb)/((x1ma)*(x2mb)) - (cm.sqrt(Q_x1pa_p_Q_x2mb))/(x1pa*(x2mb)) - (cm.sqrt(Q_x1ma + Q_x2pb))/((x1ma)*x2pb) + cm.sqrt(Q_x1pa + Q_x2pb)/(x1pa*x2pb)))/b + (0.125*x2**2*(cm.sqrt(Q_x1ma_p_Q_x2mb)/((x1ma)*(x2mb)) - (cm.sqrt(Q_x1pa_p_Q_x2mb))/(x1pa*(x2mb)) - (cm.sqrt(Q_x1ma + Q_x2pb))/((x1ma)*x2pb) + cm.sqrt(Q_x1pa + Q_x2pb)/(x1pa*x2pb)))/bb + (0.0625*x2*((cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*x2**2*((cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*((-((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.03125*x2*((-((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.03125*x1*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.125*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*b) + (0.0625*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.03125*x1*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.125*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*b) - (0.0625*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.03125*x1*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.125*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*b) - (0.0625*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.03125*x1*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/b + (0.125*x2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/bb + (0.03125*x1**2*(cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) - cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*b) + (0.03125*x1**2*x2*(cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) - cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*bb) - (0.125*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/bb + (0.03125*x1**2*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.010416666666666666*(x1ma)**3*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.125*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/bb - (0.03125*x1**2*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.010416666666666666*x1pa**3*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.125*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/bb - (0.03125*x1**2*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.010416666666666666*(x1ma)**3*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.125*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/bb + (0.03125*x1**2*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*x1pa**3*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb)).real


@njit(float64(float64, float64, float64, float64), nogil=True, cache=True)
def sig_zz_Dz_31(a, b, x1, x2):
    x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb = get_common_var(a, b, x1, x2)
    return ((-0.03125*x1**2*x2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*b*(x1ma)*(x2mb)) + (0.03125*x1*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(a*bb*(x1ma)*(x2mb)) + (0.015625*x1**2*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*bb*(x1ma)*(x2mb)) + (0.03125*x1**2*x2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*b*x1pa*(x2mb)) - (0.03125*x1*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(a*bb*x1pa*(x2mb)) - (0.015625*x1**2*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*bb*x1pa*(x2mb)) + (0.03125*x1**2*x2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*b*(x1ma)*x2pb) - (0.03125*x1*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(a*bb*(x1ma)*x2pb) - (0.015625*x1**2*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*bb*(x1ma)*x2pb) - (0.03125*x1**2*x2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*b*x1pa*x2pb) + (0.03125*x1*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(a*bb*x1pa*x2pb) + (0.015625*x1**2*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*bb*x1pa*x2pb) + (0.0625*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x1*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x2*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*x1*x2*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*x2*((-(x1ma)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + x1pa**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x1ma)**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((x1ma)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x1pa**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*((-Q_x1ma*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.015625*x1*((-Q_x1ma*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.005208333333333333*(((x1ma)**3*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa**3*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x1*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x2*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*x1*x2*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*x2*((-(x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*(((x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*((-(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x2mb)**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + x2pb**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.015625*x1*((-(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x2mb)**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + x2pb**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.005208333333333333*(((x1ma)*(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*(x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*x2*((-cm.sqrt(Q_x1ma_p_Q_x2mb))/((x1ma)*(x2mb)) + cm.sqrt(Q_x1pa_p_Q_x2mb)/(x1pa*(x2mb)) + cm.sqrt(Q_x1ma + Q_x2pb)/((x1ma)*x2pb) - (cm.sqrt(Q_x1pa + Q_x2pb))/(x1pa*x2pb)))/(a*b) + (0.015625*x2**2*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x2*((cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.005208333333333333*((-cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((-((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2*((((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) + (0.015625*x1*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.0625*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*b) + (0.0625*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*b) - (0.03125*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.03125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.015625*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) - (0.015625*x1*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.0625*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*b) - (0.0625*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*b) + (0.03125*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.03125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.015625*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) - (0.015625*x1*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.0625*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*b) - (0.0625*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*b) + (0.03125*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.03125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.015625*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.015625*x1*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) - (0.03125*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.03125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x1*x2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(a*bb) + (0.015625*x1**2*x2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*bb) + (0.03125*x1*(cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) - cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(a*b) + (0.015625*x1**2*(cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) - cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*b) - (0.03125*x1*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.015625*x1**2*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.005208333333333333*(x1ma)**3*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.03125*x1*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.015625*x1**2*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.005208333333333333*x1pa**3*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.03125*x1*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.015625*x1**2*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.005208333333333333*(x1ma)**3*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.03125*x1*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.015625*x1**2*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.005208333333333333*x1pa**3*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb)).real


@njit(float64(float64, float64, float64, float64), nogil=True, cache=True)
def sig_zz_Dz_32(a, b, x1, x2):
    x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb = get_common_var(a, b, x1, x2)
    return ((-0.0625*x1*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(a*bb*(x1ma)*(x2mb)) - (0.03125*x1**2*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*bb*(x1ma)*(x2mb)) + (0.0625*x1*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(a*bb*x1pa*(x2mb)) + (0.03125*x1**2*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*bb*x1pa*(x2mb)) + (0.0625*x1*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(a*bb*(x1ma)*x2pb) + (0.03125*x1**2*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*bb*(x1ma)*x2pb) - (0.0625*x1*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(a*bb*x1pa*x2pb) - (0.03125*x1**2*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*bb*x1pa*x2pb) + (0.125*x2*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.125*x1*x2*((-Q_x1ma)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x1pa/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x1ma/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x2*((x1ma)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x1pa**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*(((x1ma)**2*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.03125*x1*(((x1ma)**2*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((-(x1ma)**3*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa**3*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)**3*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x2*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.125*x1*x2*((-Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + Q_x2mb/cm.sqrt(Q_x1pa_p_Q_x2mb) + Q_x2pb/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x2*(((x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*((x2mb)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x2pb**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.03125*x1*((x2mb)**3/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + x2pb**3/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((-(x1ma)*(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*(x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.25*x1*(cm.sqrt(Q_x1ma_p_Q_x2mb)/((x1ma)*(x2mb)) - (cm.sqrt(Q_x1pa_p_Q_x2mb))/(x1pa*(x2mb)) - (cm.sqrt(Q_x1ma + Q_x2pb))/((x1ma)*x2pb) + cm.sqrt(Q_x1pa + Q_x2pb)/(x1pa*x2pb)))/a + (0.125*x1**2*(cm.sqrt(Q_x1ma_p_Q_x2mb)/((x1ma)*(x2mb)) - (cm.sqrt(Q_x1pa_p_Q_x2mb))/(x1pa*(x2mb)) - (cm.sqrt(Q_x1ma + Q_x2pb))/((x1ma)*x2pb) + cm.sqrt(Q_x1pa + Q_x2pb)/(x1pa*x2pb)))/aa + (0.125*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/aa + (0.03125*x2**2*((cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*((cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x2*((-((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.125*x1*x2*(cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/(x1ma)) - cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/x1pa) + cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/(a - x1)) + cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/x1pa)))/(a*bb) - (0.25*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/a - (0.25*x1*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/aa - (0.03125*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.03125*x1*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.0625*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) + (0.0625*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.25*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/a + (0.25*x1*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/aa + (0.03125*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.03125*x1*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.0625*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) - (0.0625*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.25*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/a + (0.25*x1*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/aa + (0.03125*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.03125*x1*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.0625*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) - (0.0625*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.25*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/a - (0.25*x1*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/aa - (0.03125*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.03125*x1*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x1**2*x2*(cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) - cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*bb) + (0.0625*x1*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) + (0.03125*x1**2*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.010416666666666666*(x1ma)**3*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.0625*x1*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) - (0.03125*x1**2*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.010416666666666666*x1pa**3*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.0625*x1*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) - (0.03125*x1**2*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.010416666666666666*(x1ma)**3*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.0625*x1*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.03125*x1**2*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.010416666666666666*x1pa**3*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb)).real


@njit(float64(float64, float64, float64, float64), nogil=True, cache=True)
def sig_zz_Dz_33(a, b, x1, x2):
    x1ma, x2mb, x1pa, x2pb, aa, bb, Q_x2mb, Q_x1ma, Q_x1pa, Q_x2pb, Q_x1ma_p_Q_x2mb, Q_x1pa_p_Q_x2mb = get_common_var(a, b, x1, x2)
    return ((0.03125*x1**2*x2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*b*(x1ma)*(x2mb)) + (0.03125*x1*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(a*bb*(x1ma)*(x2mb)) + (0.015625*x1**2*x2**2*cm.sqrt(Q_x1ma_p_Q_x2mb))/(aa*bb*(x1ma)*(x2mb)) - (0.03125*x1**2*x2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*b*x1pa*(x2mb)) - (0.03125*x1*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(a*bb*x1pa*(x2mb)) - (0.015625*x1**2*x2**2*cm.sqrt(Q_x1pa_p_Q_x2mb))/(aa*bb*x1pa*(x2mb)) - (0.03125*x1**2*x2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*b*(x1ma)*x2pb) - (0.03125*x1*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(a*bb*(x1ma)*x2pb) - (0.015625*x1**2*x2**2*cm.sqrt(Q_x1ma + Q_x2pb))/(aa*bb*(x1ma)*x2pb) + (0.03125*x1**2*x2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*b*x1pa*x2pb) + (0.03125*x1*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(a*bb*x1pa*x2pb) + (0.015625*x1**2*x2**2*cm.sqrt(Q_x1pa + Q_x2pb))/(aa*bb*x1pa*x2pb) + (0.0625*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x1*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x2*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*x1*x2*(Q_x1ma/cm.sqrt(Q_x1ma_p_Q_x2mb) - (Q_x1pa)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x1ma)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x1pa/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((-(x1ma)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + x1pa**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x1ma)**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2*((-(x1ma)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + x1pa**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x1ma)**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((-Q_x1ma*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.015625*x1*((-Q_x1ma*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (Q_x1pa*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (Q_x1ma*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (Q_x1pa*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.005208333333333333*(((x1ma)**3*(x2mb))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa**3*(x2mb))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)**3*x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa**3*x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) + (0.0625*x1*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.0625*x2*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.0625*x1*x2*((x2mb)**2/cm.sqrt(Q_x1ma_p_Q_x2mb) - ((x2mb)**2)/cm.sqrt(Q_x1pa_p_Q_x2mb) - (Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) + Q_x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((-(x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2*((-(x1ma)*Q_x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x1pa*Q_x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb) + ((x1ma)*Q_x2pb)/cm.sqrt(Q_x1ma + Q_x2pb) - (x1pa*Q_x2pb)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((-(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x2mb)**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + x2pb**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.015625*x1*((-(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) + (x2mb)**3/cm.sqrt(Q_x1pa_p_Q_x2mb) + x2pb**3/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.005208333333333333*(((x1ma)*(x2mb)**3)/cm.sqrt(Q_x1ma_p_Q_x2mb) - (x1pa*(x2mb)**3)/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((x1ma)*x2pb**3)/cm.sqrt(Q_x1ma + Q_x2pb) + (x1pa*x2pb**3)/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*x2*(cm.sqrt(Q_x1ma_p_Q_x2mb)/((x1ma)*(x2mb)) - (cm.sqrt(Q_x1pa_p_Q_x2mb))/(x1pa*(x2mb)) - (cm.sqrt(Q_x1ma + Q_x2pb))/((x1ma)*x2pb) + cm.sqrt(Q_x1pa + Q_x2pb)/(x1pa*x2pb)))/(a*b) + (0.03125*x2*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2**2*((-cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.005208333333333333*((-cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) + (cm.sqrt((b - x2)**2)*(x2mb)**3*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) + (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) - (x2pb**3*cm.sqrt(Q_x2pb)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.015625*((((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) + (0.015625*x2*((((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2mb)*cm.asinh((x1ma)/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1ma_p_Q_x2mb) - (((b - x2)**2)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2mb)*cm.asinh(x1pa/cm.sqrt((x2mb)**2)))/cm.sqrt(Q_x1pa_p_Q_x2mb) - ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1ma/Q_x2pb)*cm.asinh((x1ma)/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1ma + Q_x2pb) + ((Q_x2pb)**(3/2)*cm.sqrt(1. + Q_x1pa/Q_x2pb)*cm.asinh(x1pa/cm.sqrt(Q_x2pb)))/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.0625*x1*x2*(cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/(a - x1)) + cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)/x1pa) + cm.atanh(cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/(x1ma)) - cm.atanh(cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)/x1pa)))/(a*bb) + (0.015625*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) + (0.015625*x1*Q_x1ma*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.0625*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*b) - (0.0625*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*b) - (0.03125*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.03125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.015625*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) - (0.015625*x1*Q_x1pa*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.0625*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*b) + (0.0625*x1*x2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*b) + (0.03125*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.03125*x1*x2**2*cm.atanh((x2mb)/cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) - (0.015625*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) - (0.015625*x1*Q_x1ma*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.0625*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*b) + (0.0625*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*b) + (0.03125*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.03125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.015625*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) + (0.015625*x1*Q_x1pa*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.0625*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*b) - (0.0625*x1*x2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*b) - (0.03125*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.03125*x1*x2**2*cm.atanh(x2pb/cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) + (0.03125*x1*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(a*b) + (0.015625*x1**2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*b) + (0.015625*x1**2*x2*(-cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/(a - x1)) - cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2)) + cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 - 2.*b*x2 + x2**2))/x1pa) + cm.log(a - x1 - cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a - x1 + cm.sqrt(aa + bb - 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/(a - x1)) + cm.log(a + x1 - cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2)) - cm.log((a + x1 + cm.sqrt(aa + bb + 2.*a*x1 + x1**2 + 2.*b*x2 + x2**2))/x1pa)))/(aa*bb) - (0.03125*x1*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(a*bb) - (0.015625*x1**2*(x1ma)*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) - (0.005208333333333333*(x1ma)**3*cm.log(x2mb + cm.sqrt(Q_x1ma_p_Q_x2mb)))/(aa*bb) + (0.03125*x1*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(a*bb) + (0.015625*x1**2*x1pa*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.005208333333333333*x1pa**3*cm.log(x2mb + cm.sqrt(Q_x1pa_p_Q_x2mb)))/(aa*bb) + (0.03125*x1*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(a*bb) + (0.015625*x1**2*(x1ma)*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) + (0.005208333333333333*(x1ma)**3*cm.log(b + x2 + cm.sqrt(Q_x1ma + Q_x2pb)))/(aa*bb) - (0.03125*x1*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(a*bb) - (0.015625*x1**2*x1pa*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb) - (0.005208333333333333*x1pa**3*cm.log(b + x2 + cm.sqrt(Q_x1pa + Q_x2pb)))/(aa*bb)).real
# -------- KERNELS END --------

@njit(float64(float64, float64, float64, float64, float64, float64, float64), nogil=True, cache=True)
def isotropic_R4_kernel(dx, dy, hx, hy, a, b, const):
    dx1 = dx + hx
    dx2 = dx
    dx3 = dx - hx

    dy1 = dy + hy
    dy2 = dy
    dy3 = dy - hy

    return const * (sig_zz_Dz_11(a, b, dx1, dy1) + sig_zz_Dz_12(a, b, dx1, dy2) + sig_zz_Dz_13(a, b, dx1, dy3) +
                          sig_zz_Dz_21(a, b, dx2, dy1) + sig_zz_Dz_22(a, b, dx2, dy2) + sig_zz_Dz_23(a, b, dx2, dy3) +
                          sig_zz_Dz_31(a, b, dx3, dy1) + sig_zz_Dz_32(a, b, dx3, dy2) + sig_zz_Dz_33(a, b, dx3, dy3))


@njit(fastmath=True, nogil=True, parallel=True, cache=True)
def get_toeplitzCoe_isotropic_R4(nx, ny, hx, hy, matprop, C_precision):
    """
    Let us make some definitions:
    cartesian mesh             := a structured rectangular mesh of (nx,ny) cells of rectaungular shape

                                    In the following scheme you can see the effect of element 0 onto the element i
                                    Note that to compute the influence coefficient a patch of elements around element i is considered

                                                |<-------------nx--------->|
                                         ____ _____ ____  ==== ==== ====  ___
                                    -   | .  | .   |  . || 13 | 23 | 33 || . |   y
                                    |   |____|_____|____||____|____|____||___|   |
                                    |   |    |     |    ||    | (i)|    || . |   |____x
                                    |   | .  |  .  |  . || 12 | 22 | 32 || . |
                                    |   |____|_____|____||____|____|____||___|
                                    |   | .  |  .  | .  || 11 | 21 | 31 || . |
                                    |   |____|_____|____||====|====|====||___|
                                    |   | .  |  .  | .  |  .  |  . |  . | .  |
                                    ny  |====|=====|====||____|____|____|____|
                                    |   || 13 | 23 | 33 || .  |  . |  . | .  |
                                    |   ||____|____|____||____|____|____|____|
                                    |   ||    | (0)|    ||    |    |    |    |
                                    -   || 12 | 22 | 32 || .  |  . |  . | .  |
                                        ||____|____|____||____|____|____|____|
                                        || 11 | 21 | 31 || .  |  . |  . | .  |
                                        ||====|====|====||____|____|____|____|

                                   the cell centers are marked by .

    set of unique distances    := given a set of cells in a cartesian mesh, consider the set of unique distances
                                  between any pair of cell centers.
    set of unique coefficients := given a set of unique distances then consider the interaction coefficients
                                  obtained from them

    C_toeplitz_coe             := An array of size (nx*ny), populated with the unique coefficients.

    Matematically speaking:
    for i in (0,ny) and j in (0,nx) take the set of combinations (i,j) such that [i^2 y^2 + j^2 x^2]^1/2 is unique
    """
    C_toeplitz_coe = np.zeros((3, ny * nx), dtype=C_precision)
    Ep = matprop[0]
    const = (Ep / (8. * np.pi))

    a = hx / 2.
    b = hy / 2.

    for ind in prange(ny*nx):
        # ind = i * nx + j
        # we get back i and j
        i = ind // nx
        j = ind - i * nx
        dx = j * hx
        dy = i * hy
        C_toeplitz_coe[0, ind] = isotropic_R4_kernel(dx, dy, hx, hy, a, b, const)
        C_toeplitz_coe[1, ind] = isotropic_R4_kernel(-dx, dy, hx, hy, a, b, const)
    return C_toeplitz_coe

@njit(fastmath=True, nogil=True, parallel=True, cache=True)
def get_R4_normal_traction_at(xy_obs, xy_crack, w_crack, Ep, hx, hy):
    """

    :param xy_obs: array of coordinates x, y of the points where the stress is needed
    :param xy_crack: array of coordinates x, y of the points where w is known
    :param w: crack opening
    :param Ep: plane strain Young's modulus
    :param hx: mesh size in x direction
    :param hy: mesh size in x direction
    :return: traction at the xy_obs points
    """

    const = (Ep / (8. * np.pi))
    n_xy_obs = xy_obs.shape[0]
    n_xy_crack = xy_crack.shape[0]
    normal_trac = np.zeros((n_xy_obs, n_xy_crack))
    total_comp = n_xy_obs * n_xy_crack
    a = hx / 2.
    b = hy / 2.

    for global_ind in prange(total_comp):
        ind_obs = global_ind // n_xy_crack
        ind_crack = global_ind - ind_obs * n_xy_crack
        xy_obs_i = xy_obs[ind_obs,:]
        xy_crack_i = xy_crack[ind_crack,:]

        dx_i, dy_i = get_distance_components(xy_crack_i[0], xy_crack_i[1], xy_obs_i[0], xy_obs_i[1])
        normal_trac[ind_obs, ind_crack] = w_crack[ind_crack] * isotropic_R4_kernel(dx_i, dy_i, hx, hy, a, b, const)

    return np.sum(normal_trac, axis=1)




@njit(parallel=True, fastmath=True, nogil=True, cache=True)  # <------parallel compilation
def matvec_fast_R4(uk, elemX, elemY, dimY, nx, C_toeplitz_coe, C_precision):
    # uk (numpy array), vector to which multiply the matrix C
    # nx (int), n. of element in x direction in the cartesian mesh
    # elemX (numpy array), IDs of elements to consider on x axis of the mesh
    # elemY (numpy array), IDs of elements to consider on y axis of the mesh
    # dimY (int), length(elemY) != length(elemX)
    # C_toeplitz_coe (numpy ndarray), matrix containing the 2N unique coefficients used to build the matrix C of size NxN
    # C_precision (e.g.: float)

    # 1) vector where to store the result of the dot product
    res = np.empty(dimY, dtype=C_precision)
    dimX = len(elemX)

    # 2) some indexes to build the row of a submatrix of C from the array of its unique entries
    iY = np.floor_divide(elemY, nx)
    jY = elemY - nx * iY
    iX = np.floor_divide(elemX, nx)
    jX = elemX - nx * iX

    iX *= nx
    iY *= nx

    # 3)loop over the rows of the matrix
    for iter1 in prange(dimY):
        # 4) get the indexes to access the array of C unique entries
        # 5) assembly a matrix row and execute the dot product
        # 6) execute the dot product
        dj = jX - jY[iter1]
        di = iX - iY[iter1]
        djdi = (dj > 0.) == (di > 0.)
        dj = np.abs(dj)
        di = np.abs(di)
        row = np.empty(dimX, dtype=C_precision)

        for local_ind in prange(dimX):
            if djdi[local_ind]:
                row[local_ind] = C_toeplitz_coe[0, dj[local_ind] + di[local_ind]] # dj>0 & di>0 OR dj<0 & di<0
            else:
                row[local_ind] = C_toeplitz_coe[1, dj[local_ind] + di[local_ind]] # dj<0 & di>0 OR dj>0 & di<0
        res[iter1] = np.dot(row, uk)
    return res


@njit(fastmath=True, nogil=True, parallel=True, cache=True)
def getFast_R4(elemX, elemY, nx, C_toeplitz_coe, C_precision):
    dimX = elemX.size  # number of elements to consider on x axis
    dimY = elemY.size  # number of elements to consider on y axis

    if dimX == 0 or dimY == 0:
        return np.empty((dimY, dimX), dtype=C_precision)
    else:
        C_sub = np.empty((dimY, dimX), dtype=C_precision)  # submatrix of C
        # localC_toeplotz_coe = np.copy(C_toeplitz_coe)  # local access is faster
        localC_toeplotz_coe = C_toeplitz_coe
        if dimX != dimY:
            iY = np.floor_divide(elemY, nx)
            jY = elemY - nx * iY
            iX = np.floor_divide(elemX, nx)
            jX = elemX - nx * iX
            for iter1 in prange(dimY):
                # to be deleted next 3 lines:
                # i1 = iY[iter1]
                # j1 = jY[iter1]
                # C_sub[iter1, 0:dimX] = localC_toeplotz_coe[np.abs(j1 - jX) + nx * np.abs(i1 - iX)]

                i1 = iY[iter1]
                j1 = jY[iter1]
                dj = j1 - jX
                di = i1 - iX
                djdi = (dj > 0.) == (di > 0.)
                dj = np.abs(dj)
                di = nx * np.abs(di)

                for local_ind in range(dimX):
                    if djdi[local_ind]:
                        C_sub[iter1, local_ind] = C_toeplitz_coe[0, dj[local_ind] + di[local_ind]]  # dj>0 & di>0 OR dj<0 & di<0
                    else:
                        C_sub[iter1, local_ind] = C_toeplitz_coe[1, dj[local_ind] + di[local_ind]]  # dj<0 & di>0 OR dj>0 & di<0
            return C_sub

        elif dimX == dimY and np.all((elemY == elemX)):
            i = np.floor_divide(elemX, nx)
            j = elemX - nx * i

            for iter1 in prange(dimX):
                # to be deleted next 3 lines:
                # i1 = i[iter1]
                # j1 = j[iter1]
                # C_sub[iter1, 0:dimX] = localC_toeplotz_coe[np.abs(j - j1) + nx * np.abs(i - i1)]

                i1 = i[iter1]
                j1 = j[iter1]
                dj = j - j1
                di = i - i1
                djdi = (dj > 0.) == (di > 0.)
                dj = np.abs(dj)
                di = nx * np.abs(di)

                for local_ind in range(dimX):
                    if djdi[local_ind]:
                        C_sub[iter1, local_ind] = C_toeplitz_coe[0, dj[local_ind] + di[local_ind]]  # dj>0 & di>0 OR dj<0 & di<0
                    else:
                        C_sub[iter1, local_ind] = C_toeplitz_coe[1, dj[local_ind] + di[local_ind]]  # dj<0 & di>0 OR dj>0 & di<0

            return C_sub

        else:
            iY = np.floor_divide(elemY, nx)
            jY = elemY - nx * iY
            iX = np.floor_divide(elemX, nx)
            jX = elemX - nx * iX

            for iter1 in prange(dimY):
                # to be deleted next 3 lines:
                # i1 = iY[iter1]
                # j1 = jY[iter1]
                # C_sub[iter1, 0:dimX] = localC_toeplotz_coe[np.abs(j1 - jX) + nx * np.abs(i1 - iX)]

                i1 = iY[iter1]
                j1 = jY[iter1]
                dj = j1 - jX
                di = i1 - iX
                djdi = (dj > 0.) == (di > 0.)
                dj = np.abs(dj)
                di = nx * np.abs(di)

                for local_ind in range(dimX):
                    if djdi[local_ind]:
                        C_sub[iter1, local_ind] = C_toeplitz_coe[0, dj[local_ind] + di[local_ind]]  # dj>0 & di>0 OR dj<0 & di<0
                    else:
                        C_sub[iter1, local_ind] = C_toeplitz_coe[1, dj[local_ind] + di[local_ind]]  # dj<0 & di>0 OR dj>0 & di<0
            return C_sub


@njit(fastmath=True, nogil=True, cache=True) # <-- here parallel can not be set to True because currently appending to list is not threadsafe
def getFast_sparseC_R4(C_toeplitz_coe, C_toeplitz_coe_decay, elmts, nx, decay_tshold=0.9, probability=0.05):
    i = np.floor_divide(elmts, nx)
    j = elmts - nx * i
    dimX = len(elmts)
    self_c = C_toeplitz_coe[0,0]
    #myR = range(dimX)
    data = List()
    rows = List()
    cols = List()
    i *= nx
    for iter1 in range(dimX):

        # self effect
        data.append(self_c)
        rows.append(iter1)
        cols.append(iter1)
        for iter2 in range(iter1 + 1, dimX):
            dj = j[iter2] - j[iter1]
            di = i[iter2] - i[iter1]
            djdi = (dj > 0.) == (di > 0.)
            ii2 = np.abs(dj) + np.abs(di)
            if djdi:
                l = 0  # dj>0 & di>0 OR dj<0 & di<0
            else:
                l = 1  # dj<0 & di>0 OR dj>0 & di<0
            if C_toeplitz_coe_decay[ii2] > decay_tshold:# and random.random() < probability:
            #if C_toeplitz_coe_decay[ii2] > decay_tshold:
                cols.append(iter2)
                rows.append(iter1)
                data.append(C_toeplitz_coe[l,ii2])
                # symmetry
                rows.append(iter2)
                cols.append(iter1)
                data.append(C_toeplitz_coe[l,ii2])


    # import matplotlib
    # matplotlib.pyplot.spy(coo_matrix((data, (rows, cols)), shape=(dimX, dimX), dtype=dtype))

    # fill ratio:
    # print('fill ratio ' + str(100*len(data)/(dimX*dimX)))
    return data, rows, cols, dimX